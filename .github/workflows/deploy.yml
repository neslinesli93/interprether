name: Deploy

on:
  push:
    branches:
      - "master"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1

        with:
          username: neslinesli93
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set short hash
        id: vars
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"

      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/backend/Dockerfile.prod
          push: true
          tags: |
            neslinesli93/interprether_backend:latest
            neslinesli93/interprether_backend:${{ steps.vars.outputs.short_sha }}
          cache-from: type=registry,ref=neslinesli93/interprether_backend:buildcache
          cache-to: type=registry,ref=neslinesli93/interprether_backend:buildcache,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/frontend/Dockerfile.prod
          push: true
          tags: |
            neslinesli93/interprether_frontend:latest
            neslinesli93/interprether_frontend:${{ steps.vars.outputs.short_sha }}
          cache-from: type=registry,ref=neslinesli93/interprether_frontend:buildcache
          cache-to: type=registry,ref=neslinesli93/interprether_frontend:buildcache,mode=max

      - name: Copy files to server
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        with:
          flags: "-avzr --delete"
          src: "./docker-compose.prod.yml"
          dest: "root@${{ secrets.DEPLOY_HOST }}:/root/docker-compose.yml"

      - name: Restart containers
        uses: appleboy/ssh-action@master
        env:
          WEB3_PROVIDER_URL: ${{ secrets.WEB3_PROVIDER_URL }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: root
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          envs: WEB3_PROVIDER_URL
          script: |
            docker-compose pull
            docker-compose up --detach
